name: Upsert Migration

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    branches:
      - develop
      - main
    paths:
      - "sql/*.sql"

jobs:
  bytebase-upsert-migration:
    runs-on: ubuntu-latest
    # Runs only if PR is approved and target branch is main
    # if: github.event.review.state == 'approved' && github.event.pull_request.base.ref == 'main'
    if: github.event.review.state == 'approved'
    env:
      ISSUE_TITLE: "[${{ github.repository }}#${{ github.event.pull_request.number }}] ${{ github.event.pull_request.title }}"
      DESCRIPTION: "Triggered by ${{ github.event.repository.html_url }}/pull/${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}"
    name: Upsert Migration
    environment: ${{ github.event.pull_request.base.ref == 'master' && 'prod' || 'alpha' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Bytebase
        id: login
        uses: bytebase/github-action-example/.github/actions/login@main
        with:
          url: ${{ vars.BYTEBASE_URL }}
          service-account: ${{ vars.BYTEBASE_SERVICE_ACCOUNT }}
          service-account-key: ${{ secrets.BYTEBASE_PASSWORD }}
      - name: Upsert issue
        id: upsert
        uses: bytebase/github-action-example/.github/actions/upsert-issue@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: "sql/*.sql"
          url: ${{ vars.BYTEBASE_URL }}
          token: ${{ steps.login.outputs.token }}
          headers: '{"Accept-Encoding": "deflate, gzip"}'
          project-id: ${{ vars.BYTEBASE_PROJECT }}
          database: ${{ vars.DATABASE }}
          title: ${{ env.ISSUE_TITLE }}
          description: ${{ env.DESCRIPTION }}